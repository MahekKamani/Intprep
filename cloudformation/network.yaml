AWSTemplateFormatVersion: '2010-09-09'
Description: Network infrastructure for RAG Interview Question Generator

Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCidrBlock:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the public subnet in us-east-1a
  PrivateSubnetCidrBlock:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for the private subnet in us-east-1a
  NewPublicSubnetCidrBlock:
    Type: String
    Default: 10.0.3.0/24
    Description: CIDR block for the new public subnet in us-east-1b

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: RAG-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RAG-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidrBlock
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: RAG-Public-Subnet

  NewPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref NewPublicSubnetCidrBlock
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: RAG-New-Public-Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidrBlock
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: RAG-Private-Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RAG-Public-Route-Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  NewPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref NewPublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Add Elastic IP for NAT Gateway
  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: RAG-NAT-EIP

  # Add NAT Gateway in Public Subnet
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: RAG-NAT-Gateway

  # Add Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RAG-Private-Route-Table

  # Add Route for Private Subnet to NAT Gateway
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  # Associate Private Subnet with Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB and EC2
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: RAG-Public-SG

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda, SageMaker, and OpenSearch
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          SourceSecurityGroupId: !Ref PublicSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # Allow outbound HTTPS for S3
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: RAG-Private-SG

Outputs:
  VpcId:
    Description: VPC ID for the RAG project
    Value: !Ref VPC
    Export:
      Name: RAG-VpcId
  PublicSubnetId:
    Description: Public subnet ID for ALB and EC2
    Value: !Ref PublicSubnet
    Export:
      Name: RAG-PublicSubnetId
  NewPublicSubnetId:
    Description: New public subnet ID for ALB
    Value: !Ref NewPublicSubnet
    Export:
      Name: RAG-NewPublicSubnetId
  PrivateSubnetId:
    Description: Private subnet ID for Lambda, SageMaker, and OpenSearch
    Value: !Ref PrivateSubnet
    Export:
      Name: RAG-PrivateSubnetId
  PublicSecurityGroupId:
    Description: Security group ID for public resources
    Value: !Ref PublicSecurityGroup
    Export:
      Name: RAG-PublicSecurityGroupId
  PrivateSecurityGroupId:
    Description: Security group ID for private resources
    Value: !Ref PrivateSecurityGroup
    Export:
      Name: RAG-PrivateSecurityGroupId